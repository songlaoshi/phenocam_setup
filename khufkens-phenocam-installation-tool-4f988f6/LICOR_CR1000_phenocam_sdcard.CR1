'CR1000 Series Datalogger
'To create a different opening program template, type in new
'instructions and select Template | Save as Default Template
'date:03/07/2016
'program author:Earl Keel
'contact: Earl Keel, USDA-ARS Southeast Watershed Research Lab Tifton, GA
'  earl.keel@ars.usda.gov

'---------------------------------------------------------------------------------------
'This program will store images and metadata to a CF card. The images must be collected
'through LoggerNet or manually retrieve the images off the CF card.
'
'A 2GB CF card should store ~ 3.5 months of images and metedata
'
'Program also records PAR. Using the CR1000 to capture images allows other parameters
'onsite to be recorded as well.
'---------------------------------------------------------------------------------------

' Merge EC2_Ogletree_LI190_r3.cr1 into Phenocam_CR1000_SEWERL2_FTP.CR1 
' 1/13/2016 - rgw

'battery check up output changed to midnight reading.  20150713 - RGW
'Program to read LI190.  Based on CR3000 EC program. 20150702 -  RGW

'Code copied from Peter 03/01/2016 EK
'Date: 1/21/2015
'Contact: Peter Ganzlin, USDA-ARS SWMRU - peter.ganzlin@ars.usda.gov

'Date:03/07/2016 EK
'Modified program to copy .jpg file to CRD: as data backup

'Date:03/14/2016 EK
'Added midnight table.
'Added instructions to clear USR: drive if full, full drive was preventing
'  images from being written to CRD: drive. USR: drive is normally cleared
'  after Loggernet retrieves .jpg. If communication link is lost, images will still
'  be stored on compact flash card.

'Date:03/15/2016 EK
'Corrected timeisbetween function for setting takepic = true
'
'Changed instructions to control C5 for powering modem to timeisbetween.
'
'Date 03/16/2016 EK
'Increased modem on time from 5 to 10 minutes
'Added instructions to get metadata for each image both rgb and ir.

'Date 03/31/2016 EK
'Created .cgi calls on the phenocam CR1000 then calls them to collect the images and
'   metadata.


'********************Wiring************************
'NetCam SC              Power 12VDC         SW12
'                       Ground              G
'
'Crydom D1D07 relay     Input +(3)          C5
'                       Input -(4)           G
'                       Output+(2)          12V Preferably on Power in to logger such as CH200
'                       Output-(1)           +12VDC supply to Raven XT
'
'Raven XT                +12VDC in          Output -(1) of Relay
'                        Ground              G  Preferably on CH200

'*** Beginning of LI-190SB wiring ***
'1H     Signal (red)
'1L     Signal reference (black)
'gnd     jumper to 1L
'        Shield (clear)
'*** End of LI-190SB wiring ***

'*** Beginning of LI-190SB constants and variables ***
Const LI_190SB_ANALOG_INPUT = 1     'Unique differential analog input channel.
Const LI_190SB_CAL = 1000/0.604/7.05 'Unique multiplier for LI-190SB (1000/0.604/sensitivity).
Public par
Units par = umol/m^2/s
Const ANALOG_INTEGRATION = _60Hz       'Slow sequence analog measurement integration time, _60Hz or _50Hz.
Const OUTPUT_INTERVAL = 30 'Unique value, online flux data output interval in minutes.
'*** End of LI-190SB constants and variables ***




'Phenocam Variables

'TCPIP and date/time variables for NetCam
Public HGetHandle As Long
Public HGetResp As String * 48
Public HGetHead As String * 48


Public HGetHandleMeta_rgb As Long
Public HGetRespMeta_rgb As String * 48

Public HGetHandleMeta_ir As Long
Public HGetRespMeta_ir As String * 48

'FTP variable
Public FTPResult 


'Realtime clock array
Dim rTime(9)
Alias rTime(1) = Year,Month,DOM,Hour,Minute,Secd,uSecd,WkDay,DayofYr

'DateTime date/time string format
'Public DateTime As String * 28
'Dim UTC_Offset As Long

'Phenocam
Public TakePic As Boolean
Public Copy_rgb As Boolean
Public Copy_meta_rgb As Boolean 
Public Copy_ir As Boolean
Public Copy_meta_ir As Boolean

'Variable to store USR drive space
Public Drivefree As Long

'Modem control flag

Public Flag(5) As Boolean


'Phenocam Data Table

'Log for NetCam downloads
DataTable (HGetLog,True,100)
  Sample (1,HGetHandle,Long)
  Sample (1,HGetResp,String)
  Sample (1,HGetHead,String)
  Sample (1,Copy_rgb,Boolean)
  Sample (1,Copy_ir,Boolean)
EndTable

'** Beginning of LI-190SB output Data ***
DataTable (LI190,TRUE,-1)
  DataInterval (0,OUTPUT_INTERVAL,Min,10)
  Average (1,par,IEEE4,false)
EndTable
'** End of LI-190SB output Data ***




'Declare Public Variables
'Example:
Public PTemp, batt_volt

'Declare Other Variables
'Example:
'Dim Counter

'Declare Constants
'Example:
'CONST PI = 3.141592654	

'Define Data Tables.
DataTable (Hourly,1,9999) 'Set table size to # of records, or -1 to autoallocate.
	DataInterval (0,60,Min,10)
	Minimum (1,batt_volt,FP2,False,False)
	Sample (1,PTemp,FP2)
EndTable


'Added midnight table 03/14/2016
DataTable (Midnight,True,-1 )
  DataInterval (0,1440,Min,10)
  Minimum (1,batt_volt,FP2,False,False)
  Sample (1,PTemp,FP2)
EndTable 


'Define Subroutines
'Sub
	'EnterSub instructions here
'EndSub

'Main Program
BeginProg
  
NetworkTimeProtocol ("",-18000,1000)

	Scan (5,Sec,0,0)
		PanelTemp (PTemp,250)
		Battery (batt_volt)
		'Enter other measurement instructions
		'Call Output Tables
		'Example:
		CallTable Hourly
	  CallTable Midnight
	  
	'between 5:30 and 21:00 trigger an image every 30 minutes
   ' If TimeIsBetween (0530,21,24,Hr) Then
   If TimeIsBetween (330,1260,1440,Min) Then
      If IfTime(0,30,min) Then TakePic = TRUE
    EndIf
    
' Power modem using C5 and Crydom solid state relay D1D07
'  Turn on cell modem 9 minutes into a 30 minute interval
 ' If IfTime(9,30,min) Then
   ' Flag(5) = True
 ' EndIf
 
' Turn off cell modem 14 minutes into a 30 minute interval
  'If IfTime(14,30,min) Then
    'Flag(5) = False
 ' EndIf

'Added timeisbetween function to control C5
'Increased time the cell modem is powered up from 5 to 10 min.

If TimeIsBetween (9,25,30,min) Then
    Flag(5) = True
      Else
        Flag(5) = False
EndIf

  
If Flag(5) = True Then PortSet(5,1) 'C5 set high
If Flag(5) = False Then PortSet(5,0)' C5 set low



'If (IfTime (0,5,Sec))Then

		PanelTemp (PTemp,250)
'		Battery (batt_volt)
		'Enter other measurement instructions
		'Call Output Tables
		'Example:
		
    '*** Beginning of LI-190SB measurement ***
    VoltDiff (par,1,AutoRange,LI_190SB_ANALOG_INPUT,TRUE,0,ANALOG_INTEGRATION,LI_190SB_CAL,0)
    '*** End of LI-190SB measurement ***

    CallTable LI190
'EndIf

 NextScan

  
  SlowSequence
  Do
    Delay (1,1,Sec)
    RealTime (rTime) 'get various time elements
    If TakePic = TRUE Then
      
      Drivefree = settings.USRDriveFree 'Retrieve free space on USR: drive
           If Drivefree <= 500000 Then  'If no room left on USR
              FileManage ("USR:*.jpg",16)  'delete .jpg files from USR
              FileManage ("USR:*.meta",16)  'delete .txt files from USR         
           EndIf 
          
         
      SW12(1) 'turn on camera
      Delay(1,70,Sec) 'delay, let camera boot up
      'intialize rgb filename
      'Stores image with filename from phenocam i.e. "arsgacp2"
      HGetResp = "USR:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg"
      HGetHead = "" 'important to initialize
      'get image and store to USR drive OLD WAY w/o metadata
     ' HGetHandle = HTTPGet("http://192.168.1.100/netcam.jpg",HGetResp,HGetHead)
        
        'get rgb image metadata
          HGetRespMeta_rgb = "USR:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta"
              HGetHandleMeta_rgb = HTTPGet("http://192.168.1.100/metadata.cgi",HGetRespMeta_rgb,"")
               HGetHandle = HTTPGet("http://192.168.1.100/rgb.cgi",HGetResp,HGetHead)
               
        'copy file from USR: to CRD:
                Copy_rgb = FileCopy ("USR:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg","CRD:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg")
          'copy metadata file from USR: to CRD:
                  Copy_meta_rgb = FileCopy ("USR:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta","CRD:arsgacp2_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta")
      


     Delay(1,30,Sec)
     'switches camera to ir mode
      HGetResp = ""
      'HGetHead = "Authorization: Basic YWRtaW46YWRtaW4=" + CHR(13)+CHR(10)
      HGetHead = ""
      HGetHandle = HTTPGet("http://admin:admin@192.168.1.100/admin.cgi?image&ir_enable=1",HGetResp,HGetHead)
      Delay(1,30,Sec)
      'intialize ir filename
      HGetResp = "USR:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg"
      HGetHead = "" 'important to initialize
      'get image and store to USR drive OLD WAY w/o metadata
     ' HGetHandle = HTTPGet("http://192.168.1.100/netcam.jpg",HGetResp,HGetHead)
         
          'get ir image metadata
          HGetRespMeta_ir = "USR:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta"
              HGetHandleMeta_ir = HTTPGet("http://192.168.1.100/metadata.cgi",HGetRespMeta_ir,"")
                HGetHandle = HTTPGet("http://192.168.1.100/rgb.cgi",HGetResp,HGetHead)
                'copy file from USR: to CRD
                    Copy_ir = FileCopy ("USR:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg","CRD:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".jpg")
                'copy file from USR: to CRD
                  Copy_meta_ir = FileCopy ("USR:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta","CRD:arsgacp2_IR_" &rTime(1)&"_"&FormatLong(rTime(2),"%02u")&"_"&FormatLong(rTime(3),"%02u")&"_"&FormatLong(rTime(4),"%02u")&FormatLong(rTime(5),"%02u")&FormatLong(rTime(6),"%02u") &".meta")
                
     
       Delay(1,15,Sec)
      'swicthes camera back to rgb mode
      HGetResp = ""
      'HGetHead = "Authorization: Basic YWRtaW46YWRtaW4=" + CHR(13)+CHR(10)
      HGetHead = ""
      HGetHandle = HTTPGet("http://admin:admin@192.168.1.100/admin.cgi?image&ir_enable=0",HGetResp,HGetHead)
      CallTable HGetLog	'log retrieval
      SW12(0) 'turn off camera
      TakePic=FALSE
      Copy_rgb = False
      Copy_ir = False
      
    EndIf
  Loop
  EndSequence
  

EndProg

